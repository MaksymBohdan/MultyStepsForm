{"version":3,"sources":["redux/actions/types/type.js","redux/reducers/allReducers.js","redux/reducers/buttonPanelReducers/stepReducer.js","redux/reducers/discoverySourseReducers/singleIpReducer.js","redux/reducers/discoverySourseReducers/startIpReducer.js","redux/reducers/discoverySourseReducers/endIpReducer.js","redux/reducers/buttonPanelReducers/validationReducer.js","redux/reducers/discoveryInputDataReducers/readCommunityReducer.js","redux/reducers/discoveryInputDataReducers/contextNameReducer.js","redux/reducers/discoveryInputDataReducers/contextEngineReducer.js","redux/reducers/discoveryInputDataReducers/authenticationReducer.js","redux/reducers/discoveryInputDataReducers/authenticationAndPrivacyReducer.js","redux/reducers/discoveryInputDataReducers/SNMPVersionValueReducer.js","redux/reducers/discoveryInputDataReducers/discoveryOptionsValidReducer.js","redux/reducers/discoverySourseReducers/dropDownValReducer.js","redux/reducers/discoveryOptionsReducers/toggleHandlerSNMPReducer.js","redux/store/store.js","components/StepPanel.jsx","redux/actions/discoverySourseActions/discoverySourseActions.js","components/DiscoverySourse.jsx","redux/actions/discoveryInputDataActions/discoveryInputActions.js","redux/actions/discoveryOptionsActions/discoveryOptionsAction.js","components/DiscoveryOptions.jsx","redux/actions/buttonPanelActions/buttonPanellAllActions.js","components/Summary.jsx","components/ButtonsPanel.jsx","components/DiscoveryInputDataV1V2.jsx","components/DiscoveryInputDataV3.jsx","components/DiscoveryInputData.jsx","components/MainPanel.jsx","App.js","index.js"],"names":["NEXT_STEP","PREV_STEP","VALIDATION_IP","SNMPV_COMMUNITY_VALUE","CONTEXT_NAME","CONTEXT_ENGINE","AUTENTICATION_ENGINE","AUTH_PRIV","SNMP_VAL","DISCOVERY_OPT","TOGGLE_SNMP","DROPDOWN_VAL","END_IP_VALUE","SINGLE_IP_VALUE","START_IP_VALUE","rootReducer","combineReducers","step","state","arguments","length","undefined","action","type","actionTypes","data","singleIP","event","startIP","endIP","ipValidated","readCommunity","contextName","contextEngine","authenticationAlgorithm","securityOptions","code","discoveryOptionsCheckboxValue","dropdownValue","toggleSNMP","DevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","compose","applyMiddleware","thunk","connect","_ref","stepStatus","s","react_default","a","createElement","Container","textAlign","className","Step","Group","fluid","size","style","marginBottom","color","Content","Title","dropDownValAction","endIpAction","target","value","singleIpAction","startIpAction","DiscoverySourse","fileName","modalStatus","options","key","text","activeIndex","dropdownHundler","_this","props","uploadFile","uploadedFileName","files","name","setState","cancelUploading","modalToggle","previous","handleClickDiscoverySourse","e","titleProps","index","newIndex","_this$state","this","_this$props","singleIPValue","Accordion","as","Menu","vertical","backgroundColor","Item","active","content","Header","margin","onClick","Dropdown","selection","placeholder","onChange","paddingTop","Form","Input","marginTop","Modal","basic","trigger","Button","open","label","Actions","inverted","Icon","Message","error","Component","dispatch","readSNMPV","contextNameInput","contextEngineInput","authenticationInput","authenticationAndPrivacy","SNMPVersionValue","discoveryOptionsValid","toggleHandlerSNMP","DiscoveryOptions","handleClick","handleCheckBox","_this2","grouped","Checkbox","fontSize","checked","nextStep","prevStep","validationIp","bool","Summary","objectFin","summaryMethod","obj","snmpConfig","version","snmpv1","snmpv2","snmpv3","concat","contextEngineID","password","encryptionAlgorithm","objNew","objIP","inputType","ipAddress","Object","objectSpread","startIPAddress","endIPAddress","objPrased","JSON","stringify","reload","location","currentStep","startIPvalue","endIPvalue","Grid","Column","width","regStart","regEnd","pattern","validBooleanStart","test","validBooleanEnd","getValidatedId","components_Summary","DiscoveryInputDataV3","handleChangeAuth","getAuthValue","val","components_DiscoveryInputDataV1V2","inline","widths","Radio","DiscoveryInputData","radioValue","handleChange","components_DiscoveryInputDataV3","components_DiscoverySourse","components_ButtonsPanel","floated","components_DiscoveryOptions","components_DiscoveryInputData","App","components_StepPanel","components_MainPanel","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c83700b5.chunk.js","sourcesContent":["//ButtonPanel\r\nexport const NEXT_STEP = 'NEXT_STEP';\r\nexport const PREV_STEP = 'PREV_STEP';\r\nexport const VALIDATION_IP = 'VALIDATION_IP';\r\n//DiscoveryInput\r\nexport const SNMPV_COMMUNITY_VALUE = 'SNMPV_COMMUNITY_VALUE';\r\nexport const CONTEXT_NAME = 'CONTEXT_NAME';\r\nexport const CONTEXT_ENGINE = 'CONTEXT_ENGINE';\r\nexport const AUTENTICATION_ENGINE = 'AUTENTICATION_ENGINE';\r\nexport const AUTH_PRIV = 'AUTH_PRIV';\r\nexport const SNMP_VAL = 'SNMP_VAL';\r\nexport const DISCOVERY_OPT = 'DISCOVERY_OPT';\r\n//DiscoveryOptions\r\nexport const TOGGLE_SNMP = 'TOGGLE_SNMP';\r\n//DiscoverySourse\r\nexport const DROPDOWN_VAL = 'DROPDOWN_VAL';\r\nexport const END_IP_VALUE = 'END_IP_VALUE';\r\nexport const SINGLE_IP_VALUE = 'SINGLE_IP_VALUE';\r\nexport const START_IP_VALUE = 'START_IP_VALUE';","import {combineReducers} from 'redux';\r\nimport step from './buttonPanelReducers/stepReducer';\r\nimport singleIP from './discoverySourseReducers/singleIpReducer';\r\nimport startIP from './discoverySourseReducers/startIpReducer';\r\nimport endIP from './discoverySourseReducers/endIpReducer';\r\nimport ipValidated from './buttonPanelReducers/validationReducer';\r\nimport readCommunity from './discoveryInputDataReducers/readCommunityReducer'\r\nimport contextName from './discoveryInputDataReducers/contextNameReducer';\r\nimport contextEngine from './discoveryInputDataReducers/contextEngineReducer';\r\nimport authenticationAlgorithm from './discoveryInputDataReducers/authenticationReducer';\r\nimport securityOptions from './discoveryInputDataReducers/authenticationAndPrivacyReducer'\r\nimport code from './discoveryInputDataReducers/SNMPVersionValueReducer';\r\nimport discoverOptionVal from './discoveryInputDataReducers/discoveryOptionsValidReducer';\r\nimport dropDownValReducer from './discoverySourseReducers/dropDownValReducer';\r\nimport toggleSNMP from './discoveryOptionsReducers/toggleHandlerSNMPReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    step: step ,\r\n    singleIP: singleIP,\r\n    startIP:startIP,\r\n    endIP: endIP, \r\n    ipValidated : ipValidated, \r\n    readCommunity: readCommunity,\r\n    contextName: contextName,\r\n    contextEngine :contextEngine,\r\n    authenticationAlgorithm: authenticationAlgorithm,\r\n    securityOptions: securityOptions,\r\n    code : code, \r\n    discoveryOptionsCheckboxValue : discoverOptionVal,\r\n    dropdownValue:dropDownValReducer,\r\n    toggleSNMP:toggleSNMP,\r\n})\r\n\r\nexport default rootReducer;","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function step(state=1, action){\r\n  switch(action.type){\r\n    case actionTypes.NEXT_STEP:\r\n    return state + action.data;\r\n\r\n    case actionTypes.PREV_STEP:\r\n    return state - action.data;\r\n\r\n    default:\r\n    return state;\r\n  }\r\n}","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function singleIpReducer(state=\"\", action){\r\n  switch(action.type){\r\n    case actionTypes.SINGLE_IP_VALUE:\r\n    return action.event;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n}","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function startIpReducer(state=\"\", action){\r\n  switch(action.type){\r\n    \r\n    case actionTypes.START_IP_VALUE:\r\n    return action.event;\r\n\r\n    default:\r\n    return state;\r\n  }\r\n}","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function endIpReducer(state=\"\", action){\r\n  switch(action.type) {\r\n      \r\n    case actionTypes.END_IP_VALUE:\r\n    return action.event;\r\n\r\n    default:\r\n    return state;\r\n    } \r\n}\r\n","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function count (state=true, action){\r\n  switch(action.type){\r\n    case actionTypes.VALIDATION_IP:\r\n    return action.data;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n}","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function communityReducer (state=null, action){\r\n  switch(action.type){\r\n    \r\n    case actionTypes.SNMPV_COMMUNITY_VALUE:\r\n    return action.event;\r\n\r\n    default:\r\n    return state;\r\n  }\r\n} ","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function contextNameReducer (state=null, action){\r\n  switch(action.type){\r\n    \r\n    case actionTypes.CONTEXT_NAME:\r\n    return action.event;\r\n\r\n    default:\r\n    return state;\r\n  }\r\n} ","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function contextEngineReducer (state=null, action){\r\n  switch(action.type){\r\n    \r\n    case actionTypes.CONTEXT_ENGINE:\r\n    return action.event;\r\n\r\n    default:\r\n    return state;\r\n  }\r\n} ","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function authenticationReducer (state=null, action){\r\n  switch(action.type){\r\n    \r\n    case actionTypes.AUTENTICATION_ENGINE:\r\n    return action.event;\r\n\r\n    default:\r\n    return state;\r\n  }\r\n} ","import * as actionTypes from '../../actions/types/type'\r\n\r\n\r\nexport default function count (state=null, action){\r\n  switch(action.type){\r\n    case actionTypes.AUTH_PRIV:\r\n    return action.data;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n}","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function SNMPReducer (state=null, action){\r\n  switch(action.type){\r\n    case actionTypes.SNMP_VAL:\r\n    return action.data;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n}","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function SNMPReducer (state=null, action){\r\n  switch(action.type){\r\n    case actionTypes.DISCOVERY_OPT:\r\n    return action.data;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n}","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function dropDownValReducer (state=null, action){\r\n  switch(action.type){\r\n    case actionTypes.DROPDOWN_VAL:\r\n    return action.data;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n}","import * as actionTypes from '../../actions/types/type'\r\n\r\nexport default function toggleHandlerSNMP(state = false, action) {\r\n  switch (action.type) {\r\n    case actionTypes.TOGGLE_SNMP:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport rootReducer from '../reducers/allReducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst DevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk), DevTools));\r\n\r\nexport default store;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Step, Container } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StepPanel = ({ step }) => {\r\n  // defining of actual status of a step\r\n  const stepStatus = s => {\r\n    if (s > step) {\r\n      return \"disabled\";\r\n    } else if (s === step) {\r\n      return \"active\";\r\n    } else {\r\n      return \"complited\";\r\n    }\r\n  };\r\n  return (\r\n    <Container textAlign=\"center\" className=\"App\">\r\n      <Step.Group\r\n        fluid\r\n        size=\"huge\"\r\n        style={{ marginBottom: \"20px\", color: \"red\" }}\r\n      >\r\n        <Step className={stepStatus(1)} style={{ color: \"#2ECC40\" }}>\r\n          <Step.Content>\r\n            <Step.Title> Discovery Sourse</Step.Title>\r\n          </Step.Content>\r\n        </Step>\r\n\r\n        <Step className={stepStatus(2)} style={{ color: \"#2ECC40\" }}>\r\n          <Step.Content>\r\n            <Step.Title>Discovery Options</Step.Title>\r\n          </Step.Content>\r\n        </Step>\r\n\r\n        <Step className={stepStatus(3)} style={{ color: \"#2ECC40\" }}>\r\n          <Step.Content>\r\n            <Step.Title> Discovery Input Data</Step.Title>\r\n          </Step.Content>\r\n        </Step>\r\n        <Step className={stepStatus(4)} style={{ color: \"#2ECC40\" }}>\r\n          <Step.Content>\r\n            <Step.Title>Summary</Step.Title>\r\n          </Step.Content>\r\n        </Step>\r\n      </Step.Group>\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    step: state.step\r\n  };\r\n}\r\n\r\nStepPanel.propTypes = {\r\n  step: PropTypes.number.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(StepPanel);\r\n","import * as actionTypes from '../types/type'\r\n\r\nexport const dropDownValAction = (data)=>{\r\n  return{\r\n    type: actionTypes.DROPDOWN_VAL,\r\n    data: data,\r\n  }\r\n}\r\n\r\nexport const endIpAction =(event)=>{\r\n  return{\r\n    type:actionTypes.END_IP_VALUE,\r\n    event: event.target.value,\r\n  }\r\n} \r\n\r\nexport const singleIpAction = (event)=>{\r\n  return{\r\n    type:actionTypes.SINGLE_IP_VALUE,\r\n    event:event.target.value,\r\n  }\r\n}\r\nexport const startIpAction = (event)=>{\r\n  return{\r\n    type:actionTypes.START_IP_VALUE,\r\n    event:event.target.value,\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  dropDownValAction,\r\n  endIpAction,\r\n  startIpAction,\r\n  singleIpAction\r\n} from \"../redux/actions/discoverySourseActions/discoverySourseActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Dropdown,\r\n  Header,\r\n  Icon,\r\n  Modal,\r\n  Button,\r\n  Input,\r\n  Container,\r\n  Form,\r\n  Accordion,\r\n  Menu,\r\n  Message\r\n} from \"semantic-ui-react\";\r\n\r\nclass DiscoverySourse extends Component {\r\n  state = {\r\n    fileName: \"\",\r\n    modalStatus: false,\r\n    options: [\r\n      { key: 1, text: \"IP\", value: \"IP\" },\r\n      { key: 2, text: \"IP Range\", value: \"IP Range\" },\r\n      { key: 3, text: \"CSV\", value: \"CSV\" }\r\n    ],\r\n    activeIndex: 0\r\n  };\r\n\r\n  dropdownHundler = (event, data) => {\r\n    // GETTING VALUE FROM DISCOVERY SOURSE DROPDOWN\r\n    this.props.dropDownValAction(data.value);\r\n  };\r\n\r\n  uploadFile = event => {\r\n    // GETTING INFO OF UPLOADED FILE\r\n    let file = event.target.files[0];\r\n    let uploadedFileName = file.name;\r\n    if (!uploadedFileName) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      fileName: uploadedFileName\r\n    });\r\n  };\r\n\r\n  cancelUploading = () => {\r\n    // CLEARING DATA OF UPLOADED FILE\r\n    this.setState({\r\n      fileName: \"\"\r\n    });\r\n    this.modalToggle();\r\n  };\r\n\r\n  modalToggle = () => {\r\n    //TOGGLE FOR UPLOADING MODAL\r\n    this.setState(previous => ({\r\n      modalStatus: !previous.modalStatus\r\n    }));\r\n  };\r\n\r\n  handleClickDiscoverySourse = (e, titleProps) => {\r\n    // TOGGLE FOR AN ACCORDION\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  render() {\r\n    const { fileName, modalStatus, options, activeIndex } = this.state;\r\n    const {\r\n      singleIPValue,\r\n      ipValidated,\r\n      singleIP,\r\n      startIP,\r\n      endIP,\r\n      dropdownValue\r\n    } = this.props;\r\n\r\n    return (\r\n      <Accordion\r\n        as={Menu}\r\n        vertical\r\n        fluid\r\n        style={{ backgroundColor: \"#2F363D\" }}\r\n      >\r\n        <Menu.Item>\r\n          <Accordion.Title\r\n            style={{ color: \"#D3D3D3\" }}\r\n            active={activeIndex === 1}\r\n            content={\r\n              <Header as=\"h2\" style={{ color: \"#D3D3D3\", margin: 0 }}>\r\n                Discovery Sourse\r\n              </Header>\r\n            }\r\n            index={1}\r\n            onClick={this.handleClickDiscoverySourse}\r\n          />\r\n          <Accordion.Content active={activeIndex === 1}>\r\n            <Dropdown\r\n              fluid\r\n              selection\r\n              options={options}\r\n              placeholder=\"Select Discovery Sourse\"\r\n              value={dropdownValue}\r\n              onChange={this.dropdownHundler}\r\n            />\r\n\r\n            {dropdownValue === \"IP\" ? (\r\n              <Container>\r\n                <Header as=\"h3\" style={{ color: \"#D3D3D3\", paddingTop: 15 }}>\r\n                  IP\r\n                </Header>\r\n                <Form.Input\r\n                  onChange={singleIP}\r\n                  name=\"singleIp\"\r\n                  type=\"text\"\r\n                  fluid\r\n                  placeholder=\"e.g. 1.2.3.4\"\r\n                />\r\n              </Container>\r\n            ) : null}\r\n\r\n            {dropdownValue === \"IP Range\" ? (\r\n              <Container>\r\n                <Header as=\"h3\" style={{ color: \"#D3D3D3\", marginTop: 15 }}>\r\n                  Starting IP Adress\r\n                </Header>\r\n                <Form.Input\r\n                  onChange={startIP}\r\n                  name=\"startIp\"\r\n                  type=\"text\"\r\n                  fluid\r\n                  placeholder=\"e.g. 1.2.3.4\"\r\n                />\r\n\r\n                <Header as=\"h3\" style={{ color: \"#D3D3D3\" }}>\r\n                  Ending IP Adress\r\n                </Header>\r\n                <Form.Input\r\n                  onChange={endIP}\r\n                  name=\"endIp\"\r\n                  type=\"text\"\r\n                  fluid\r\n                  placeholder=\"e.g. 1.2.3.250\"\r\n                />\r\n              </Container>\r\n            ) : null}\r\n\r\n            {dropdownValue === \"CSV\" ? (\r\n              <Container>\r\n                <Modal basic size=\"large\"\r\n                  trigger={\r\n                    <Container fluid textAlign=\"center\">\r\n                      <Button\r\n                        size=\"huge\"\r\n                        color=\"teal\"\r\n                        style={{ marginTop: 15 }}\r\n                        onClick={this.modalToggle}\r\n                      >\r\n                        Select a file...\r\n                      </Button>\r\n                    </Container>\r\n                  }\r\n                  open={modalStatus}\r\n                >\r\n                  <Modal.Header as=\"h3\" style={{ color: \"#D3D3D3\"}} >Select a file</Modal.Header>\r\n                  <Input\r\n                  style={{ color: \"#D3D3D3\", paddingTop: 15 }}\r\n                    fluid\r\n                    size=\"large\"\r\n                    label=\"UPLOAD FILE\"\r\n                    name=\"file\"\r\n                    type=\"file\"\r\n                    onChange={this.uploadFile}\r\n                  />\r\n                  <Modal.Actions>\r\n                    <Button color=\"green\" inverted size=\"huge\" onClick={this.modalToggle}>\r\n                      <Icon name=\"checkmark\" /> Upload\r\n                    </Button>\r\n\r\n                    <Button color=\"red\" size=\"huge\" inverted onClick={this.cancelUploading}>\r\n                      <Icon name=\"remove\" /> Cancel\r\n                    </Button>\r\n                  </Modal.Actions>\r\n                </Modal>\r\n                {fileName.length > 0 && (\r\n                  <Header>Seled file: C:\\fakepath\\{fileName}</Header>\r\n                )}\r\n              </Container>\r\n            ) : null}\r\n          </Accordion.Content>\r\n        </Menu.Item>\r\n        {ipValidated === false &&\r\n        singleIPValue.length === 0 &&\r\n        fileName.length === 0 && ( //ON IP INPUT MISTAKE\r\n            <Message error>\r\n              <h3>Error</h3>\r\n              <p>Your IP is invalid</p>\r\n            </Message>\r\n          )}\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ipValidated: state.ipValidated,\r\n    dropdownValue: state.dropdownValue,\r\n    singleIPValue: state.singleIP\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    singleIP: function(event) {\r\n      dispatch(singleIpAction(event));\r\n    },\r\n    startIP: function(event) {\r\n      dispatch(startIpAction(event));\r\n    },\r\n    endIP: function(event) {\r\n      dispatch(endIpAction(event));\r\n    },\r\n    dropDownValAction: function(data) {\r\n      dispatch(dropDownValAction(data));\r\n    }\r\n  };\r\n}\r\n\r\nDiscoverySourse.propTypes = {\r\n  dropdownValue: PropTypes.string,\r\n  ipValidated: PropTypes.bool.isRequired,\r\n  singleIPValue: PropTypes.string.isRequired,\r\n  singleIP: PropTypes.func.isRequired,\r\n  startIP: PropTypes.func.isRequired,\r\n  endIP: PropTypes.func.isRequired,\r\n  dropDownValAction: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiscoverySourse);\r\n","import * as actionTypes from '../types/type'\r\n\r\nexport const readSNMPV =(event)=>{\r\n  return{\r\n    type: actionTypes.SNMPV_COMMUNITY_VALUE,\r\n    event: event.target.value,\r\n  }\r\n} \r\n\r\nexport const contextNameInput =(event)=>{\r\n  return{\r\n    type: actionTypes.CONTEXT_NAME,\r\n    event: event.target.value,\r\n  }\r\n}\r\n\r\nexport const contextEngineInput =(event)=>{\r\n  return{\r\n    type: actionTypes.CONTEXT_ENGINE,\r\n    event: event.target.value,\r\n  }\r\n}\r\n\r\nexport const authenticationInput =(event)=>{\r\n  return{\r\n    type: actionTypes.AUTENTICATION_ENGINE,\r\n    event: event.target.value,\r\n  }\r\n}\r\n\r\nexport const authenticationAndPrivacy = (data)=>{\r\n  return{\r\n    type: actionTypes.AUTH_PRIV,\r\n    data: data,\r\n  }\r\n}\r\n\r\nexport const SNMPVersionValue = (data)=>{\r\n  return{\r\n    type: actionTypes.SNMP_VAL,\r\n    data: data,\r\n  }\r\n}\r\n\r\nexport const discoveryOptionsValid = (data)=>{\r\n  return{\r\n    type: actionTypes.DISCOVERY_OPT,\r\n    data: data,\r\n  }\r\n}\r\n\r\n\r\n","import * as actionTypes from '../types/type'\r\n\r\nexport const toggleHandlerSNMP =()=>{\r\n  return {\r\n    type : actionTypes.TOGGLE_SNMP,\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { discoveryOptionsValid } from \"../redux/actions/discoveryInputDataActions/discoveryInputActions\";\r\nimport { toggleHandlerSNMP } from \"../redux/actions/discoveryOptionsActions/discoveryOptionsAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Accordion,\r\n  Menu,\r\n  Form,\r\n  Container,\r\n  Message,\r\n  Header\r\n} from \"semantic-ui-react\";\r\n\r\nclass DiscoveryOptions extends Component {\r\n  state = {\r\n    activeIndex: 0\r\n  };\r\n\r\n  handleClick = (e, titleProps) => {\r\n    //TOGGLE FOR AN ACCORDION\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  handleCheckBox = (event, { value }) => {\r\n    // GETTING CHECKBOX VALUE\r\n    this.props.discoveryOptionsValid(value);\r\n  };\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n    const { discoveryOptionsCheckboxValue, step, toggleSNMP } = this.props;\r\n    return (\r\n      <Container>\r\n        <Accordion\r\n          as={Menu}\r\n          vertical\r\n          fluid\r\n          style={{ backgroundColor: \"#2F363D\" }}\r\n        >\r\n          <Menu.Item>\r\n            <Accordion.Title\r\n              style={{ color: \"#D3D3D3\" }}\r\n              active={activeIndex === 1}\r\n              content={\r\n                <Header as=\"h2\" style={{ color: \"#D3D3D3\", margin: 0 }}>\r\n                  Discovery Options\r\n                </Header>\r\n              }\r\n              index={1}\r\n              onClick={this.handleClick}\r\n            />\r\n\r\n            <Accordion.Content active={activeIndex === 1}>\r\n              <Form>\r\n                <Form.Group grouped>\r\n                  <Form.Checkbox\r\n                    style={{ fontSize: 20, color: \"blue\" }}\r\n                    label=\"SNMP\"\r\n                    value=\"snmp\"\r\n                    onChange={this.handleCheckBox}\r\n                    checked={toggleSNMP}\r\n                    onClick={() => this.props.toggleHandlerSNMP()}\r\n                  />\r\n                  <Form.Checkbox\r\n                    style={{ fontSize: 20 }}\r\n                    label=\"Link\"\r\n                    value=\"link\"\r\n                    onChange={this.handleCheckBox}\r\n                  />\r\n                  <Form.Checkbox\r\n                    style={{ fontSize: 20 }}\r\n                    label=\"VLAN\"\r\n                    value=\"vlan\"\r\n                    onChange={this.handleCheckBox}\r\n                  />\r\n\r\n                  <Form.Checkbox\r\n                    style={{ fontSize: 20 }}\r\n                    label=\"Ports\"\r\n                    value=\"ports\"\r\n                    onChange={this.handleCheckBox}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Accordion.Content>\r\n          </Menu.Item>\r\n        </Accordion>\r\n        {discoveryOptionsCheckboxValue === null &&\r\n        step > 2 && ( // ON EMPTY CHECKBOXES\r\n            <Message error>\r\n              <h3>Error</h3>\r\n              <p>This section is empty</p>\r\n            </Message>\r\n          )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    discoveryOptionsCheckboxValue: state.discoveryOptionsCheckboxValue,\r\n    step: state.step,\r\n    toggleSNMP: state.toggleSNMP\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    discoveryOptionsValid: function(event) {\r\n      dispatch(discoveryOptionsValid(event));\r\n    },\r\n    toggleHandlerSNMP: function() {\r\n      dispatch(toggleHandlerSNMP());\r\n    }\r\n  };\r\n}\r\nDiscoveryOptions.propTypes = {\r\n  discoveryOptionsCheckboxValue: PropTypes.string,\r\n  step: PropTypes.number.isRequired,\r\n  toggleSNMP: PropTypes.bool.isRequired,\r\n  discoveryOptionsValid: PropTypes.func.isRequired,\r\n  toggleHandlerSNMP: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiscoveryOptions);\r\n","import * as actionTypes from '../types/type'\r\n\r\nexport const nextStep =(step)=>{\r\n  return{\r\n    type: actionTypes.NEXT_STEP,\r\n    data: step,\r\n  }\r\n}\r\n\r\nexport const prevStep =(step)=>{\r\n  return{\r\n    type: actionTypes.PREV_STEP,\r\n    data:step,\r\n  }\r\n} \r\n\r\nexport const validationIp = (bool)=>{\r\n  return{\r\n    type: actionTypes.VALIDATION_IP,\r\n    data: bool,\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {prevStep} from '../redux/actions/buttonPanelActions/buttonPanellAllActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Icon, Button } from \"semantic-ui-react\";\r\n\r\nclass Summary extends Component {\r\n  state = {\r\n    objectFin: \"\",\r\n  };\r\n\r\n  componentDidMount() { // STARTING OF SUMMARY METHOD\r\n    this.summaryMethod();\r\n  }\r\n  summaryMethod = () => { // VALIDATION OF STATE FILDS AND CREATION OF JSON OBJ\r\n    let obj = {\r\n      content: {\r\n        snmpConfig: {\r\n          version: \"3\",\r\n          snmpv1: null,\r\n          snmpv2: null,\r\n          snmpv3: {\r\n            readCommunity: `${this.props.readCommunity}`,\r\n            securityOptions: `${this.props.securityOptions}`,\r\n            contextName: `${this.props.contextName}`,\r\n            contextEngineID: `${this.props.contextEngine}`,\r\n            authenticationAlgorithm: {\r\n              password: `${this.props.authenticationAlgorithm}`,\r\n              code: `${this.props.code}`\r\n            }\r\n          },\r\n          encryptionAlgorithm: {\r\n            code: \"\"\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    let objNew = {};\r\n\r\n    if (this.props.dropdownValue === \"IP\") {\r\n      let objIP = {\r\n        inputType: \"IP\",\r\n        ipAddress: `${this.props.singleIP}`\r\n      };\r\n      objNew = { ...objIP, ...obj };\r\n    } else if (this.props.dropdownValue === \"IP Range\") {\r\n      let objIP = {\r\n        inputType: \"IP Range\",\r\n        startIPAddress: `${this.props.startIP}`,\r\n        endIPAddress: `${this.props.endIP}`\r\n      };\r\n      objNew = { ...objIP, ...obj };\r\n    } else {\r\n      objNew = { ...obj };\r\n    }\r\n\r\n    let objPrased = JSON.stringify(objNew);\r\n    this.setState({\r\n      objectFin: objPrased\r\n    });\r\n  };\r\n  reload =()=>{ // ON SUMBIT AND RESTART FUNCTION \r\n    window.location.reload()\r\n  }\r\n\r\n  render() {\r\n    const {objectFin} = this.state;\r\n    return (\r\n      <div>\r\n        <Modal open={true} basic size=\"large\">\r\n          <Modal.Content style={{fontSize:20}}>\r\n           {objectFin}\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button basic color=\"red\" size=\"big\" inverted onClick={()=>this.props.prevStep(1)}>\r\n              <Icon  name=\"remove\" /> Step back to change\r\n            </Button>\r\n            <Button color=\"green\" size=\"big\" onClick={this.reload} inverted>\r\n              <Icon  name=\"checkmark\" /> Submit and restart\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    readCommunity: state.readCommunity,\r\n    securityOptions: state.securityOptions,\r\n    contextName: state.contextName,\r\n    contextEngine: state.contextEngine,\r\n    code: state.code,\r\n    authenticationAlgorithm: state.authenticationAlgorithm,\r\n    dropdownValue: state.dropdownValue,\r\n    singleIP: state.singleIP,\r\n    startIP: state.startIP,\r\n    endIP: state.endIP,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    prevStep: function(step) {\r\n      dispatch(prevStep(step));\r\n    }\r\n  };\r\n}\r\n\r\nSummary.propTypes = {\r\n  readCommunity: PropTypes.string,\r\n  securityOptions: PropTypes.string,\r\n  contextName: PropTypes.string,\r\n  contextEngine: PropTypes.string,\r\n  code: PropTypes.string,\r\n  authenticationAlgorithm: PropTypes.string,\r\n  dropdownValue: PropTypes.string,\r\n  singleIP: PropTypes.string.isRequired,\r\n  startIP: PropTypes.string.isRequired,\r\n  endIP: PropTypes.string.isRequired,\r\n  prevStep:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Summary);\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { nextStep, prevStep,validationIp} from \"../redux/actions/buttonPanelActions/buttonPanellAllActions\";\r\nimport Summary from \"./Summary\";\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Button} from \"semantic-ui-react\";\r\n\r\n\r\nconst ButtonsPanel = ({currentStep, nextStep, prevStep, startIPvalue, endIPvalue, validationIp}) => {\r\n  const stepUp = () => { // NEXT STEP FUNCTION\r\n    if (currentStep < 4) {\r\n     nextStep(1);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const stepDown = () => { // CLEAR/PREVIOUS STEP FUNCTION\r\n    if (currentStep > 1) {\r\n      prevStep(1);\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const getValidatedId = () => { //VALIDATION OF START/END IP'S INPUTS\r\n    const regStart = startIPvalue;\r\n    const regEnd = endIPvalue;\r\n\r\n    const pattern = /^((\\d\\d?|1\\d\\d|2([0-4]\\d|5[0-5]))\\.){3}(\\d\\d?|1\\d\\d|2([0-4]\\d|5[0-5]))$/;\r\n    let validBooleanStart = pattern.test(regStart);\r\n    let validBooleanEnd = pattern.test(regEnd);\r\n\r\n    let ipValidated =\r\n      validBooleanStart && validBooleanEnd && regEnd.length > regStart.length;\r\n    \r\n    validationIp(ipValidated);\r\n  };\r\n\r\n  const nextStepValidation = () => { // HOF OF NEXT STEP ACTION\r\n      stepUp();\r\n      getValidatedId();\r\n  };\r\n  return (\r\n    <Grid>\r\n        <Grid.Column width={8}>\r\n          <Button size='massive' onClick={stepDown}>\r\n            Clear\r\n          </Button>\r\n        </Grid.Column>\r\n        <Grid.Column width={8} textAlign=\"right\">\r\n          <Button className=\"positive massive\" onClick={nextStepValidation}>\r\n            {currentStep < 3 ? \"Next Step\" : \"Discover\"}\r\n            {currentStep === 4 && <Summary />}\r\n          </Button>\r\n        </Grid.Column>\r\n       \r\n      </Grid>\r\n    );\r\n\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentStep: state.step,\r\n    startIPvalue: state.startIP,\r\n    endIPvalue: state.endIP,\r\n    singleIP: state.singleIP\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    nextStep: function(step) {\r\n      dispatch(nextStep(step));\r\n    },\r\n    validationIp: function(bool) {\r\n      dispatch(validationIp(bool));\r\n    },\r\n    prevStep: function(step) {\r\n      dispatch(prevStep(step));\r\n    }\r\n  };\r\n}\r\n\r\nButtonsPanel.propTypes = {\r\n  currentStep: PropTypes.number.isRequired,\r\n  startIPvalue: PropTypes.string.isRequired,\r\n  endIPvalue: PropTypes.string.isRequired,\r\n  singleIP: PropTypes.string.isRequired,\r\n  nextStep:PropTypes.func.isRequired,\r\n  validationIp:PropTypes.func.isRequired,\r\n  prevStep:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ButtonsPanel);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { readSNMPV } from \"../redux/actions/discoveryInputDataActions/discoveryInputActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Header, Form } from \"semantic-ui-react\";\r\n\r\nconst DiscoveryInputDataV1V2 = ({ readSNMPV }) => {\r\n  return (\r\n    <Container>\r\n      <Header as=\"h3\" style={{ color: \"#D3D3D3\" }}>\r\n        Read Community\r\n      </Header>\r\n      <Form.Input\r\n        onChange={readSNMPV}\r\n        name=\"readCommunity\"\r\n        type=\"text\"\r\n        fluid\r\n        placeholder=\"public\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    readSNMPV: function(event) {\r\n      dispatch(readSNMPV(event));\r\n    }\r\n  };\r\n}\r\n\r\nDiscoveryInputDataV1V2.propTypes = {\r\n  readSNMPV: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(DiscoveryInputDataV1V2);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  contextNameInput,\r\n  contextEngineInput,\r\n  authenticationInput,\r\n  authenticationAndPrivacy,\r\n  SNMPVersionValue\r\n} from \"../redux/actions/discoveryInputDataActions/discoveryInputActions\";\r\nimport DiscoveryInputDataV1V2 from \"./DiscoveryInputDataV1V2\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Header, Dropdown, Form } from \"semantic-ui-react\";\r\n\r\nclass DiscoveryInputDataV3 extends Component {\r\n  state = {\r\n    options: [\r\n      {\r\n        key: 1,\r\n        text: \"Autantication and No Privacy\",\r\n        value: \"Autantication and No Privacy\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  handleChangeAuth = (e, { value }) => {\r\n    // GETTING RADIO DATA\r\n    this.props.SNMPVersionValue(value);\r\n  };\r\n\r\n  getAuthValue = (event, data) => {\r\n    // GETTING DROPDOWN DATA\r\n    let val = data.value;\r\n    this.props.authenticationAndPrivacy(val);\r\n  };\r\n\r\n  render() {\r\n    const { options } = this.state;\r\n    const {\r\n      contextNameInput,\r\n      contextEngineInput,\r\n      authenticationInput,\r\n      code\r\n    } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <DiscoveryInputDataV1V2 />\r\n        <Dropdown\r\n          style={{ marginTop: 25 }}\r\n          fluid\r\n          selection\r\n          options={options}\r\n          value={options.value}\r\n          placeholder=\"Autantication and No Privacy\"\r\n          onChange={this.getAuthValue}\r\n        />\r\n\r\n        <Header as=\"h3\" style={{ color: \"#D3D3D3\" }}>\r\n          Context Name\r\n        </Header>\r\n        <Form.Input\r\n          onChange={contextNameInput}\r\n          name=\"contextName\"\r\n          type=\"text\"\r\n          fluid\r\n          placeholder=\"sample context\"\r\n        />\r\n\r\n        <Header as=\"h3\" style={{ color: \"#D3D3D3\" }}>\r\n          Context Engine ID\r\n        </Header>\r\n        <Form.Input\r\n          onChange={contextEngineInput}\r\n          name=\"contextEngineID\"\r\n          type=\"text\"\r\n          fluid\r\n          placeholder=\"sample engine\"\r\n        />\r\n        <Header as=\"h3\" style={{ color: \"#D3D3D3\" }}>\r\n          Authentication Algorithm\r\n        </Header>\r\n        <Form>\r\n          <Container textAlign=\"center\">\r\n            <Form.Group inline widths=\"5\">\r\n              <Form.Radio\r\n                label=\"MD5\"\r\n                value=\"md5\"\r\n                checked={code === \"md5\"}\r\n                onChange={this.handleChangeAuth}\r\n              />\r\n              <Form.Radio\r\n                label=\"SHA\"\r\n                value=\"sha\"\r\n                checked={code === \"sha\"}\r\n                onChange={this.handleChangeAuth}\r\n              />\r\n              <Form.Radio\r\n                label=\"HMAC128\"\r\n                value=\"hmac128\"\r\n                checked={code === \"hmac128\"}\r\n                onChange={this.handleChangeAuth}\r\n              />\r\n              <Form.Radio\r\n                label=\"HMAC192\"\r\n                value=\"hmac192\"\r\n                checked={code === \"hmac192\"}\r\n                onChange={this.handleChangeAuth}\r\n              />\r\n              <Form.Radio\r\n                label=\"HMAC384\"\r\n                value=\"hmac384\"\r\n                checked={code === \"hmac384\"}\r\n                onChange={this.handleChangeAuth}\r\n              />\r\n            </Form.Group>\r\n          </Container>\r\n        </Form>\r\n        <Header as=\"h3\" style={{ color: \"#D3D3D3\" }}>\r\n          Authentication Password\r\n        </Header>\r\n        <Form.Input\r\n          onChange={authenticationInput}\r\n          name=\"authenticationPassword\"\r\n          type=\"password\"\r\n          fluid\r\n          placeholder=\"random password\"\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    code: state.code\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    contextNameInput: function(event) {\r\n      dispatch(contextNameInput(event));\r\n    },\r\n    contextEngineInput: function(event) {\r\n      dispatch(contextEngineInput(event));\r\n    },\r\n    authenticationInput: function(event) {\r\n      dispatch(authenticationInput(event));\r\n    },\r\n    authenticationAndPrivacy: function(data) {\r\n      dispatch(authenticationAndPrivacy(data));\r\n    },\r\n    SNMPVersionValue: function(data) {\r\n      dispatch(SNMPVersionValue(data));\r\n    }\r\n  };\r\n}\r\n\r\nDiscoveryInputDataV3.propTypes = {\r\n  code: PropTypes.string,\r\n  contextNameInput: PropTypes.func.isRequired,\r\n  contextEngineInput: PropTypes.func.isRequired,\r\n  authenticationInput: PropTypes.func.isRequired,\r\n  authenticationAndPrivacy: PropTypes.func.isRequired,\r\n  SNMPVersionValue: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiscoveryInputDataV3);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Header,\r\n  Form,\r\n  Container,\r\n  Accordion,\r\n  Menu\r\n} from \"semantic-ui-react\";\r\nimport DiscoveryInputDataV1V2 from \"./DiscoveryInputDataV1V2\";\r\nimport DiscoveryInputDataV3 from \"./DiscoveryInputDataV3\";\r\n\r\nclass DiscoveryInputData extends Component {\r\n  state = {\r\n    radioValue: \"\",\r\n    activeIndex: 0\r\n  };\r\n\r\n  handleChange = (e, { value }) => {\r\n    // GETTING VALUE OF RADIO FORM\r\n    this.setState({\r\n      radioValue: value\r\n    });\r\n  };\r\n\r\n  handleClick = (e, titleProps) => {\r\n    //TOGGLE FOR AN ACCORDION\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  render() {\r\n    const { radioValue, activeIndex } = this.state;\r\n\r\n    return (\r\n      <Accordion\r\n        as={Menu}\r\n        vertical\r\n        fluid\r\n        style={{ backgroundColor: \"#2F363D\" }}\r\n      >\r\n        <Menu.Item>\r\n          <Accordion.Title\r\n            style={{ color: \"#D3D3D3\" }}\r\n            active={activeIndex === 1}\r\n            content={\r\n              <Header as=\"h2\" style={{ color: \"#D3D3D3\", margin: 0 }}>\r\n                Selected Options\r\n              </Header>\r\n            }\r\n            index={1}\r\n            onClick={this.handleClick}\r\n          />\r\n\r\n          <Accordion.Content active={activeIndex === 1}>\r\n            <Header as=\"h3\" style={{ color: \"#D3D3D3\", paddingTop: 15 }}>\r\n              SNMP Version\r\n            </Header>\r\n            <Form>\r\n              <Container textAlign=\"center\">\r\n                <Form.Group inline widths=\"3\">\r\n                  <Form.Radio\r\n                    label=\"V1\"\r\n                    value=\"v1\"\r\n                    checked={radioValue === \"v1\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Form.Radio\r\n                    label=\"V2\"\r\n                    value=\"v2\"\r\n                    checked={radioValue === \"v2\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Form.Radio\r\n                    label=\"V3\"\r\n                    value=\"v3\"\r\n                    checked={radioValue === \"v3\"}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Container>\r\n            </Form>\r\n\r\n            {(radioValue === \"v1\" && <DiscoveryInputDataV1V2 />) || // RENDERION ON DEFINITE RADIO FORM VALUE\r\n              (radioValue === \"v2\" && <DiscoveryInputDataV1V2 />)}\r\n            {radioValue === \"v3\" && <DiscoveryInputDataV3 />}\r\n          </Accordion.Content>\r\n        </Menu.Item>\r\n      </Accordion>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiscoveryInputData;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DiscoverySourse from \"./DiscoverySourse\";\r\nimport { Container, Grid } from \"semantic-ui-react\";\r\nimport DiscoveryOptions from \"./DiscoveryOptions\";\r\nimport ButtonsPanel from \"./ButtonsPanel\";\r\nimport DiscoveryInputData from \"./DiscoveryInputData\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MainPanel = ({ step, toggleSNMP }) => {\r\n  switch (\r\n    step //PAGE INTERFACE ON EACH STEP\r\n  ) {\r\n    case 1:\r\n      return (\r\n        <Container>\r\n          <Grid>\r\n            <Grid.Column width={8}>\r\n              <DiscoverySourse />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <ButtonsPanel />\r\n        </Container>\r\n      );\r\n    case 2:\r\n      return (\r\n        <Container>\r\n          <Grid>\r\n            <Grid.Column width={8}>\r\n              <DiscoverySourse />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={8} floated=\"right\">\r\n              <DiscoveryOptions />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <ButtonsPanel />\r\n        </Container>\r\n      );\r\n    case 3:\r\n      return (\r\n        <Container>\r\n          <Grid>\r\n            <Grid.Column width={8}>\r\n              <DiscoverySourse />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={8} floated=\"right\">\r\n              <DiscoveryOptions />\r\n            </Grid.Column>\r\n          </Grid>\r\n          {toggleSNMP === true && <DiscoveryInputData />}\r\n          <ButtonsPanel />\r\n        </Container>\r\n      );\r\n    case 4:\r\n      return (\r\n        <Container>\r\n          <Grid>\r\n            <Grid.Column width={8}>\r\n              <DiscoverySourse />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width={8} floated=\"right\">\r\n              <DiscoveryOptions />\r\n            </Grid.Column>\r\n          </Grid>\r\n          {toggleSNMP === true && <DiscoveryInputData />}\r\n          <ButtonsPanel />\r\n        </Container>\r\n      );\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    step: state.step,\r\n    toggleSNMP: state.toggleSNMP\r\n  };\r\n}\r\n\r\nMainPanel.propTypes = {\r\n  step: PropTypes.number.isRequired,\r\n  toggleSNMP: PropTypes.bool.isRequired\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(MainPanel);\r\n","import \"./App.css\";\nimport { Container } from \"semantic-ui-react\";\nimport StepPanel from './components/StepPanel'\nimport MainPanel from \"./components/MainPanel\";\n\nimport React from 'react';\n\nconst App = () => {\n  return (\n    <Container>\n        <StepPanel/>\n        <MainPanel/>\n      </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n<Provider store ={store}>\n\n<App />, \n</Provider>,\ndocument.getElementById('root'));\n\n"],"sourceRoot":""}